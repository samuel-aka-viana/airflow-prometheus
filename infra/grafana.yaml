replicas: 1
adminUser: admin
adminPassword: admin

service:
  type: NodePort
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  ingressClassName: nginx
  annotations: {}
  hosts:
    - grafana.local.test
  tls: []

persistence:
  enabled: true
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  size: 10Gi

resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1Gi

grafana.ini:
  server:
    root_url: http://grafana.local.test
    enable_gzip: true
  auth:
    disable_login_form: false
    disable_signout_menu: false
  auth.anonymous:
    enabled: false
    org_role: Viewer
  auth.basic:
    enabled: true
  analytics:
    reporting_enabled: false
    check_for_updates: false
  security:
    admin_user: admin
    admin_password: admin
    secret_key: "your-secret-key-here"
  users:
    allow_sign_up: false
    allow_org_create: false
    auto_assign_org: true
    auto_assign_org_role: Viewer
  database:
    type: sqlite3
    path: grafana.db
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  log:
    mode: console
    level: info
  alerting:
    enabled: true
    execute_alerts: true

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus.monitoring:9090
        access: proxy
        isDefault: true
        editable: true
        jsonData:
          timeInterval: "30s"
          queryTimeout: "60s"
          httpMethod: "POST"
      - name: Loki
        type: loki
        url: http://loki.monitoring:3100
        access: proxy
        editable: true
        jsonData:
          maxLines: 1000
      - name: Jaeger
        type: jaeger
        url: http://jaeger-query.monitoring:16686
        access: proxy
        editable: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: "airflow"
        orgId: 1
        folder: "Airflow"
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/airflow
      - name: "kubernetes"
        orgId: 1
        folder: "Kubernetes"
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/kubernetes
      - name: "system"
        orgId: 1
        folder: "System"
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/system

dashboards:
  airflow:
    airflow-cluster:
      gnetId: 15090
      revision: 1
      datasource: Prometheus
    airflow-dag:
      gnetId: 15091
      revision: 1
      datasource: Prometheus
  kubernetes:
    k8s-cluster:
      gnetId: 7249
      revision: 1
      datasource: Prometheus
    k8s-pods:
      gnetId: 6417
      revision: 1
      datasource: Prometheus
  system:
    node-exporter:
      gnetId: 1860
      revision: 29
      datasource: Prometheus

sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    folder: /var/lib/grafana/dashboards
    searchNamespace: ALL
    provider:
      foldersFromFilesStructure: true
  datasources:
    enabled: true
    label: grafana_datasource
    searchNamespace: ALL

env:
  GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel"

rbac:
  create: true
  pspEnabled: false
  namespaced: false

serviceAccount:
  create: true
  name: grafana

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "3000"
  prometheus.io/path: "/metrics"

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 60
  timeoutSeconds: 30
  failureThreshold: 10

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  timeoutSeconds: 10

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - grafana
          topologyKey: kubernetes.io/hostname

extraVolumes:
  - name: airflow-dashboards
    configMap:
      name: airflow-grafana-dashboards

extraVolumeMounts:
  - name: airflow-dashboards
    mountPath: /var/lib/grafana/dashboards/airflow
    readOnly: true

plugins:
  - grafana-clock-panel
  - grafana-simple-json-datasource
  - grafana-piechart-panel
  - alexanderzobnin-zabbix-app
  - grafana-worldmap-panel
  - grafana-polystat-panel

smtp:
  existingSecret: ""
  userKey: "user"
  passwordKey: "password"
