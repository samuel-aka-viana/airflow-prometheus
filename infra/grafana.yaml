# Grafana Helm Chart Values
# https://artifacthub.io/packages/helm/grafana/grafana

# Grafana configuration
replicas: 2

# Admin credentials
adminUser: admin
adminPassword: admin

# Service configuration
service:
  type: LoadBalancer
  port: 80
  targetPort: 3000
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

# Ingress configuration
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - grafana.example.com
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.example.com

# Persistence
persistence:
  enabled: true
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  size: 10Gi

# Resource configuration
resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1Gi

# Grafana.ini configuration
grafana.ini:
  server:
    root_url: https://grafana.example.com
    enable_gzip: true

  auth:
    disable_login_form: false
    disable_signout_menu: false

  auth.anonymous:
    enabled: false
    org_role: Viewer

  auth.basic:
    enabled: true

  analytics:
    reporting_enabled: false
    check_for_updates: false

  security:
    admin_user: admin
    admin_password: admin
    secret_key: "your-secret-key-here"

  users:
    allow_sign_up: false
    allow_org_create: false
    auto_assign_org: true
    auto_assign_org_role: Viewer

  database:
    type: sqlite3
    path: grafana.db

  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning

  log:
    mode: console
    level: info

  alerting:
    enabled: true
    execute_alerts: true

# Data sources configuration
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-kube-prometheus-prometheus.monitoring:9090
        access: proxy
        isDefault: true
        editable: true
        jsonData:
          timeInterval: "30s"
          queryTimeout: "60s"
          httpMethod: "POST"

      - name: Loki
        type: loki
        url: http://loki.monitoring:3100
        access: proxy
        editable: true
        jsonData:
          maxLines: 1000

      - name: Jaeger
        type: jaeger
        url: http://jaeger-query.monitoring:16686
        access: proxy
        editable: true

# Dashboard providers configuration
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'airflow'
        orgId: 1
        folder: 'Airflow'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/airflow

      - name: 'kubernetes'
        orgId: 1
        folder: 'Kubernetes'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/kubernetes

      - name: 'system'
        orgId: 1
        folder: 'System'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/system

# Dashboards configuration
dashboards:
  airflow:
    airflow-cluster:
      gnetId: 15090  # Airflow cluster dashboard from Grafana.com
      revision: 1
      datasource: Prometheus

    airflow-dag:
      gnetId: 15091  # Airflow DAG dashboard from Grafana.com
      revision: 1
      datasource: Prometheus

  kubernetes:
    k8s-cluster:
      gnetId: 7249  # Kubernetes Cluster Dashboard
      revision: 1
      datasource: Prometheus

    k8s-pods:
      gnetId: 6417  # Kubernetes Pods Dashboard
      revision: 1
      datasource: Prometheus

  system:
    node-exporter:
      gnetId: 1860  # Node Exporter Full Dashboard
      revision: 29
      datasource: Prometheus

# Sidecar configuration for dynamic dashboard loading
sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    folder: /var/lib/grafana/dashboards
    searchNamespace: ALL
    provider:
      foldersFromFilesStructure: true

  datasources:
    enabled: true
    label: grafana_datasource
    searchNamespace: ALL

# Environment variables
env:
  GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel"

# RBAC
rbac:
  create: true
  pspEnabled: false
  namespaced: false

# Service Account
serviceAccount:
  create: true
  name: grafana

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "3000"
  prometheus.io/path: "/metrics"

# Liveness and readiness probes
livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 60
  timeoutSeconds: 30
  failureThreshold: 10

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  timeoutSeconds: 10

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - grafana
          topologyKey: kubernetes.io/hostname

# Additional volumes and mounts for custom dashboards
extraVolumes:
  - name: airflow-dashboards
    configMap:
      name: airflow-grafana-dashboards

extraVolumeMounts:
  - name: airflow-dashboards
    mountPath: /var/lib/grafana/dashboards/airflow
    readOnly: true

# Plugin installation
plugins:
  - grafana-clock-panel
  - grafana-simple-json-datasource
  - grafana-piechart-panel
  - alexanderzobnin-zabbix-app
  - grafana-worldmap-panel
  - grafana-polystat-panel

# SMTP Configuration for alerts
smtp:
  existingSecret: ""
  userKey: "user"
  passwordKey: "password"