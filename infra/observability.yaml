# StatsD Exporter ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: statsd-exporter-config
  namespace: airflow
data:
  statsd_mapping.yml: |
    mappings:
      # Airflow StatsD metrics mappings (https://airflow.apache.org/docs/apache-airflow/stable/logging-monitoring/metrics.html)

      # === Counters ===
      - match: "(.+)\\.(.+)_start$"
        match_metric_type: counter
        name: "af_agg_job_start"
        match_type: regex
        labels:
          airflow_id: "$1"
          job_name: "$2"

      - match: "(.+)\\.(.+)_end$"
        match_metric_type: counter
        name: "af_agg_job_end"
        match_type: regex
        labels:
          airflow_id: "$1"
          job_name: "$2"
      # === Adicionar estes mapeamentos ao ConfigMap statsd-exporter-config ===
      
      # Task failures/successes com detalhamento por DAG e Task
      - match: "*.task_failures.*.*"
        match_metric_type: counter
        name: "af_agg_task_failures_detailed"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      - match: "*.task_successes.*.*"
        match_metric_type: counter
        name: "af_agg_task_successes_detailed"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      - match: "*.sla_miss.*.*"
        match_metric_type: counter
        name: "af_agg_sla_miss"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      - match: "*.dag.*.*.queued_duration"
        match_metric_type: observer
        name: "af_agg_task_queued_duration"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      # Task scheduled duration - Para medir tempo at√© ser agendado
      - match: "*.dag.*.*.scheduled_duration"
        match_metric_type: observer
        name: "af_agg_task_scheduled_duration"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      # Pool deferred slots - Para KubernetesExecutor
      - match: "*.pool.deferred_slots.*"
        match_metric_type: gauge
        name: "af_agg_pool_deferred_slots"
        labels:
          airflow_id: "$1"
          pool_name: "$2"

      # Pool scheduled slots - Para controle de capacidade
      - match: "*.pool.scheduled_slots.*"
        match_metric_type: gauge
        name: "af_agg_pool_scheduled_slots"
        labels:
          airflow_id: "$1"
          pool_name: "$2"

      # Task CPU usage - Para monitoramento de recursos
      - match: "*.task.cpu_usage.*.*"
        match_metric_type: gauge
        name: "af_agg_task_cpu_usage"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      # Task memory usage - Para monitoramento de recursos
      - match: "*.task.memory_usage.*.*"
        match_metric_type: gauge
        name: "af_agg_task_memory_usage"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      # Triggerer metrics - Para Airflow 2.x+
      - match: "*.triggerer.running_triggers"
        match_metric_type: gauge
        name: "af_agg_triggerer_running_triggers"
        labels:
          airflow_id: "$1"

      - match: "*.triggerer.blocked_main_thread"
        match_metric_type: counter
        name: "af_agg_triggerer_blocked_main_thread"
        labels:
          airflow_id: "$1"

      - match: "*.triggerer.trigger_fired"
        match_metric_type: counter
        name: "af_agg_triggerer_trigger_fired"
        labels:
          airflow_id: "$1"

      - match: "*.triggerer.trigger_failed"
        match_metric_type: counter
        name: "af_agg_triggerer_trigger_failed"
        labels:
          airflow_id: "$1"

      # Dataset metrics - Para data-aware scheduling
      - match: "*.dataset.updated"
        match_metric_type: counter
        name: "af_agg_dataset_updated"
        labels:
          airflow_id: "$1"

      - match: "*.dataset.orphaned"
        match_metric_type: counter
        name: "af_agg_dataset_orphaned"
        labels:
          airflow_id: "$1"

      - match: "*.dataset.triggered_dagruns"
        match_metric_type: counter
        name: "af_agg_dataset_triggered_dagruns"
        labels:
          airflow_id: "$1"

      # Kubernetes Executor specific metrics
      - match: "*.kubernetes.clear_not_launched_queued_tasks_duration"
        match_metric_type: observer
        name: "af_agg_kubernetes_clear_duration"
        labels:
          airflow_id: "$1"

      - match: "*.kubernetes.adopt_task_instances_duration"
        match_metric_type: observer
        name: "af_agg_kubernetes_adopt_duration"
        labels:
          airflow_id: "$1"

      # Scheduler loop duration - Para performance tuning
      - match: "*.scheduler.scheduler_loop_duration"
        match_metric_type: observer
        name: "af_agg_scheduler_loop_duration"
        labels:
          airflow_id: "$1"

      # Scheduler critical section query duration
      - match: "*.scheduler.critical_section_query_duration"
        match_metric_type: observer
        name: "af_agg_scheduler_critical_section_query_duration"
        labels:
          airflow_id: "$1"

      # Serialized DAGs fetch duration
      - match: "*.scheduler.serialized_dags_load_duration"
        match_metric_type: observer
        name: "af_agg_scheduler_serialized_dags_load_duration"
        labels:
          airflow_id: "$1"

      # Task instances created for operator
      - match: "*.operator.task_instances_created_(.+)"
        match_metric_type: counter
        name: "af_agg_operator_task_instances_created"
        match_type: regex
        labels:
          airflow_id: "$1"
          operator_name: "$2"

      # Task instances created for operator with DAG context
      - match: "*.operator.task_instances_created_(.+).*"
        match_metric_type: counter
        name: "af_agg_operator_task_instances_created_detailed"
        match_type: regex
        labels:
          airflow_id: "$1"
          operator_name: "$2"
          dag_id: "$3"

      # Task removed from DAG with run type
      - match: "*.task_removed_from_dag.*.*"
        match_metric_type: counter
        name: "af_agg_task_removed_from_dag_detailed"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          run_type: "$3"

      # Task restored to DAG with run type
      - match: "*.task_restored_to_dag.*.*"
        match_metric_type: counter
        name: "af_agg_task_restored_to_dag_detailed"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          run_type: "$3"

      # SLA notification failures with function name
      - match: "*.sla_callback_notification_failure.*.*"
        match_metric_type: counter
        name: "af_agg_sla_callback_notification_failure"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          func_name: "$3"

      # Previously succeeded task instances
      - match: "*.previously_succeeded.*.*"
        match_metric_type: counter
        name: "af_agg_previously_succeeded"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      # DAG processing last run seconds ago with specific file
      - match: "*.dag_processing.last_run.seconds_ago.*"
        match_metric_type: gauge
        name: "af_agg_dag_processing_last_run_seconds_ago"
        labels:
          airflow_id: "$1"
          dag_file: "$2"

      # Executor specific metrics for multi-executor setups
      - match: "*.executor.open_slots.*"
        match_metric_type: gauge
        name: "af_agg_executor_open_slots_specific"
        labels:
          airflow_id: "$1"
          executor_name: "$2"

      - match: "*.executor.queued_tasks.*"
        match_metric_type: gauge
        name: "af_agg_executor_queued_tasks_specific"
        labels:
          airflow_id: "$1"
          executor_name: "$2"

      - match: "*.executor.running_tasks.*"
        match_metric_type: gauge
        name: "af_agg_executor_running_tasks_specific"
        labels:
          airflow_id: "$1"
          executor_name: "$2"

      # Task killed externally
      - match: "*.task_killed_externally.*.*"
        match_metric_type: counter
        name: "af_agg_task_killed_externally"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      # Task removed (task doesn't exist in DAG anymore)
      - match: "*.task_removed_from_dag.*"
        match_metric_type: counter
        name: "af_agg_task_removed_from_dag"
        labels:
          airflow_id: "$1"
          dag_id: "$2"

      # Task restored (task was previously REMOVED but added back)
      - match: "*.task_restored_to_dag.*"
        match_metric_type: counter
        name: "af_agg_task_restored_to_dag"
        labels:
          airflow_id: "$1"
          dag_id: "$2"

      - match: "(.+)\\.operator_failures_(.+)$"
        match_metric_type: counter
        name: "af_agg_operator_failures"
        match_type: regex
        labels:
          airflow_id: "$1"
          operator_name: "$2"

      - match: "(.+)\\.operator_successes_(.+)$"
        match_metric_type: counter
        name: "af_agg_operator_successes"
        match_type: regex
        labels:
          airflow_id: "$1"
          operator_name: "$2"

      - match: "*.ti_failures"
        match_metric_type: counter
        name: "af_agg_ti_failures"
        labels:
          airflow_id: "$1"

      - match: "*.ti_successes"
        match_metric_type: counter
        name: "af_agg_ti_successes"
        labels:
          airflow_id: "$1"

      - match: "*.zombies_killed"
        match_metric_type: counter
        name: "af_agg_zombies_killed"
        labels:
          airflow_id: "$1"

      - match: "*.scheduler_heartbeat"
        match_metric_type: counter
        name: "af_agg_scheduler_heartbeat"
        labels:
          airflow_id: "$1"

      - match: "*.dag_processing.processes"
        match_metric_type: counter
        name: "af_agg_dag_processing_processes"
        labels:
          airflow_id: "$1"

      - match: "*.scheduler.tasks.killed_externally"
        match_metric_type: counter
        name: "af_agg_scheduler_tasks_killed_externally"
        labels:
          airflow_id: "$1"

      - match: "*.scheduler.tasks.running"
        match_metric_type: counter
        name: "af_agg_scheduler_tasks_running"
        labels:
          airflow_id: "$1"

      - match: "*.scheduler.tasks.starving"
        match_metric_type: counter
        name: "af_agg_scheduler_tasks_starving"
        labels:
          airflow_id: "$1"

      - match: "*.scheduler.orphaned_tasks.cleared"
        match_metric_type: counter
        name: "af_agg_scheduler_orphaned_tasks_cleared"
        labels:
          airflow_id: "$1"

      - match: "*.scheduler.orphaned_tasks.adopted"
        match_metric_type: counter
        name: "af_agg_scheduler_orphaned_tasks_adopted"
        labels:
          airflow_id: "$1"

      - match: "*.scheduler.critical_section_busy"
        match_metric_type: counter
        name: "af_agg_scheduler_critical_section_busy"
        labels:
          airflow_id: "$1"

      - match: "*.sla_email_notification_failure"
        match_metric_type: counter
        name: "af_agg_sla_email_notification_failure"
        labels:
          airflow_id: "$1"

      - match: "*.ti.start.*.*"
        match_metric_type: counter
        name: "af_agg_ti_start"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      - match: "*.ti.finish.*.*.*"
        match_metric_type: counter
        name: "af_agg_ti_finish"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"
          state: "$4"

      - match: "*.dag.callback_exceptions"
        match_metric_type: counter
        name: "af_agg_dag_callback_exceptions"
        labels:
          airflow_id: "$1"

      - match: "*.celery.task_timeout_error"
        match_metric_type: counter
        name: "af_agg_celery_task_timeout_error"
        labels:
          airflow_id: "$1"

      # === Gauges ===
      - match: "*.dagbag_size"
        match_metric_type: gauge
        name: "af_agg_dagbag_size"
        labels:
          airflow_id: "$1"

      - match: "*.dag_processing.import_errors"
        match_metric_type: gauge
        name: "af_agg_dag_processing_import_errors"
        labels:
          airflow_id: "$1"

      - match: "*.dag_processing.total_parse_time"
        match_metric_type: gauge
        name: "af_agg_dag_processing_total_parse_time"
        labels:
          airflow_id: "$1"

      - match: "*.dag_processing.last_runtime.*"
        match_metric_type: gauge
        name: "af_agg_dag_processing_last_runtime"
        labels:
          airflow_id: "$1"
          dag_file: "$2"

      - match: "*.dag_processing.last_run.seconds_ago.*"
        match_metric_type: gauge
        name: "af_agg_dag_processing_last_run_seconds"
        labels:
          airflow_id: "$1"
          dag_file: "$2"

      - match: "*.dag_processing.processor_timeouts"
        match_metric_type: gauge
        name: "af_agg_dag_processing_processor_timeouts"
        labels:
          airflow_id: "$1"

      - match: "*.executor.open_slots"
        match_metric_type: gauge
        name: "af_agg_executor_open_slots"
        labels:
          airflow_id: "$1"

      - match: "*.executor.queued_tasks"
        match_metric_type: gauge
        name: "af_agg_executor_queued_tasks"
        labels:
          airflow_id: "$1"

      - match: "*.executor.running_tasks"
        match_metric_type: gauge
        name: "af_agg_executor_running_tasks"
        labels:
          airflow_id: "$1"

      - match: "*.pool.open_slots.*"
        match_metric_type: gauge
        name: "af_agg_pool_open_slots"
        labels:
          airflow_id: "$1"
          pool_name: "$2"

      - match: "*.pool.queued_slots.*"
        match_metric_type: gauge
        name: "af_agg_pool_queued_slots"
        labels:
          airflow_id: "$1"
          pool_name: "$2"

      - match: "*.pool.running_slots.*"
        match_metric_type: gauge
        name: "af_agg_pool_running_slots"
        labels:
          airflow_id: "$1"
          pool_name: "$2"

      - match: "*.pool.starving_tasks.*"
        match_metric_type: gauge
        name: "af_agg_pool_starving_tasks"
        labels:
          airflow_id: "$1"
          pool_name: "$2"

      - match: "*.smart_sensor_operator.poked_tasks"
        match_metric_type: gauge
        name: "af_agg_smart_sensor_operator_poked_tasks"
        labels:
          airflow_id: "$1"

      - match: "*.smart_sensor_operator.poked_success"
        match_metric_type: gauge
        name: "af_agg_smart_sensor_operator_poked_success"
        labels:
          airflow_id: "$1"

      - match: "*.smart_sensor_operator.poked_exception"
        match_metric_type: gauge
        name: "af_agg_smart_sensor_operator_poked_exception"
        labels:
          airflow_id: "$1"

      - match: "*.smart_sensor_operator.exception_failures"
        match_metric_type: gauge
        name: "af_agg_smart_sensor_operator_exception_failures"
        labels:
          airflow_id: "$1"

      - match: "*.smart_sensor_operator.infra_failures"
        match_metric_type: gauge
        name: "af_agg_smart_sensor_operator_infra_failures"
        labels:
          airflow_id: "$1"

      # === Timers ===
      - match: "*.dagrun.dependency-check.*"
        match_metric_type: observer
        name: "af_agg_dagrun_dependency_check"
        labels:
          airflow_id: "$1"
          dag_id: "$2"

      - match: "*.dag.*.*.duration"
        match_metric_type: observer
        name: "af_agg_dag_task_duration"
        labels:
          airflow_id: "$1"
          dag_id: "$2"
          task_id: "$3"

      - match: "*.dag_processing.last_duration.*"
        match_metric_type: observer
        name: "af_agg_dag_processing_duration"
        labels:
          airflow_id: "$1"
          dag_file: "$2"

      - match: "*.dagrun.duration.success.*"
        match_metric_type: observer
        name: "af_agg_dagrun_duration_success"
        labels:
          airflow_id: "$1"
          dag_id: "$2"

      - match: "*.dagrun.duration.failed.*"
        match_metric_type: observer
        name: "af_agg_dagrun_duration_failed"
        labels:
          airflow_id: "$1"
          dag_id: "$2"

      - match: "*.dagrun.schedule_delay.*"
        match_metric_type: observer
        name: "af_agg_dagrun_schedule_delay"
        labels:
          airflow_id: "$1"
          dag_id: "$2"

      - match: "*.scheduler.critical_section_duration"
        match_metric_type: observer
        name: "af_agg_scheduler_critical_section_duration"
        labels:
          airflow_id: "$1"

      - match: "*.dagrun.*.first_task_scheduling_delay"
        match_metric_type: observer
        name: "af_agg_dagrun_first_task_scheduling_delay"
        labels:
          airflow_id: "$1"
          dag_id: "$2"

---
# StatsD Exporter Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statsd-exporter
  namespace: airflow
  labels:
    app: statsd-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: statsd-exporter
  template:
    metadata:
      labels:
        app: statsd-exporter
    spec:
      containers:
        - name: statsd-exporter
          image: quay.io/prometheus/statsd-exporter:v0.26.0
          ports:
            - containerPort: 9125
              name: statsd
              protocol: UDP
            - containerPort: 9102
              name: metrics
          args:
            - --statsd.mapping-config=/etc/statsd/mapping.yml
            - --statsd.listen-udp=:9125
            - --web.listen-address=:9102
            - --log.level=info
          volumeMounts:
            - name: config-volume
              mountPath: /etc/statsd
              readOnly: true
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: config-volume
          configMap:
            name: statsd-exporter-config
            items:
              - key: statsd_mapping.yml
                path: mapping.yml
---
# StatsD Exporter Service
apiVersion: v1
kind: Service
metadata:
  name: airflow-statsd
  namespace: airflow
  labels:
    app: statsd-exporter
spec:
  selector:
    app: statsd-exporter
  ports:
    - name: statsd
      port: 9125
      targetPort: statsd
      protocol: UDP
    - name: metrics
      port: 9102
      targetPort: metrics
      protocol: TCP
---
# Prometheus ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: airflow
data:
  prometheus.yml: |
    global:
      scrape_interval: 60s
      evaluation_interval: 60s
      scrape_timeout: 15s

    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets: [ 'localhost:9090' ]

      - job_name: statsd-exporter
        metrics_path: /metrics
        static_configs:
          - targets: [ 'airflow-statsd:9102' ]
            labels:
              airflow_id: airflow
---
# Prometheus PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  namespace: airflow
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 10Gi
---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: airflow
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus/
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --storage.tsdb.retention.time=200h
            - --web.enable-lifecycle
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-data
---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: airflow
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - name: http
      port: 9090
      targetPort: 9090
---
# Grafana ConfigMap for Datasources
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: airflow
data:
  datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus:9090
        isDefault: true
        editable: true
---
# Grafana ConfigMap for Dashboard Provisioning
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: airflow
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: dashboards
        folder: General
        type: file
        editable: true
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
          foldersFromFilesStructure: true
---
# Grafana Dashboards (vazio para satisfazer o mount)
---
# Grafana Dashboards ConfigMap
# Grafana Dashboards ConfigMap - ATUALIZADO COM DASHBOARDS DE ERRO
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: airflow
data:
  # Dashboard existente - Cluster overview
  airflow-cluster-dashboard.json: |
    {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": "-- Grafana --",
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                }
            ]
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "id": 2,
        "iteration": 1612802652229,
        "links": [],
        "panels": [
            {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 0
                },
                "id": 43,
                "panels": [],
                "title": "Scheduler & Overview",
                "type": "row"
            },
            {
                "datasource": null,
                "fieldConfig": {
                    "defaults": {
                        "custom": {},
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 0,
                    "y": 1
                },
                "id": 17,
                "options": {
                    "colorMode": "value",
                    "graphMode": "area",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "mean"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "af_agg_scheduler_heartbeat{airflow_id=\"$airflow_id\"}",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Scheduler heartbeat",
                "type": "stat"
            },
            {
                "datasource": null,
                "description": "Total failed tasks",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 1
                                },
                                {
                                    "color": "red",
                                    "value": 5
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 4,
                    "y": 1
                },
                "id": 44,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "af_agg_ti_failures{airflow_id=\"$airflow_id\"}",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Task Failures",
                "type": "stat"
            },
            {
                "datasource": null,
                "fieldConfig": {
                    "defaults": {
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 8,
                    "y": 1
                },
                "id": 4,
                "options": {
                    "colorMode": "value",
                    "graphMode": "area",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "mean"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "af_agg_dagbag_size{airflow_id=\"$airflow_id\"}",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Dagbag size",
                "type": "stat"
            },
            {
                "datasource": null,
                "description": "Number of errors from trying to parse DAG files",
                "fieldConfig": {
                    "defaults": {
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 1
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 4,
                    "w": 4,
                    "x": 12,
                    "y": 1
                },
                "id": 6,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "mean"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "af_agg_dag_processing_import_errors{airflow_id=\"$airflow_id\"}",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "DAG Import Errors",
                "type": "stat"
            }
        ],
        "refresh": "5s",
        "schemaVersion": 26,
        "style": "dark",
        "tags": [],
        "templating": {
            "list": [
                {
                    "allValue": null,
                    "current": {
                        "selected": false,
                        "text": "airflow",
                        "value": "airflow"
                    },
                    "datasource": "Prometheus",
                    "definition": "label_values(airflow_id)",
                    "error": null,
                    "hide": 0,
                    "includeAll": false,
                    "label": "Airflow Instance Id",
                    "multi": false,
                    "name": "airflow_id",
                    "options": [],
                    "query": "label_values(airflow_id)",
                    "refresh": 0,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query",
                    "useTags": false
                }
            ]
        },
        "time": {
            "from": "now-1h",
            "to": "now"
        },
        "timepicker": {
            "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
            ]
        },
        "timezone": "",
        "title": "Airflow Cluster Dashboard",
        "uid": "airflow-cluster",
        "version": 1
    }

  # NOVO Dashboard - Task Failures Overview
  airflow-task-failures.json: |
    {
        "annotations": {
            "list": []
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "id": 5,
        "links": [],
        "panels": [
            {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 0
                },
                "id": 100,
                "panels": [],
                "title": "Task Failure Counts",
                "type": "row"
            },
            {
                "datasource": null,
                "description": "Total count of failed tasks across all DAGs",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 5
                                },
                                {
                                    "color": "red",
                                    "value": 15
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 6,
                    "w": 6,
                    "x": 0,
                    "y": 1
                },
                "id": 101,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "text": {
                        "titleSize": 20,
                        "valueSize": 72
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "sum(af_agg_ti_failures{airflow_id=\"$airflow_id\"})",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Total Failed Tasks",
                "type": "stat"
            },
            {
                "datasource": null,
                "description": "Failed tasks in the last 24 hours",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 3
                                },
                                {
                                    "color": "red",
                                    "value": 10
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 6,
                    "w": 6,
                    "x": 6,
                    "y": 1
                },
                "id": 102,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "text": {
                        "titleSize": 20,
                        "valueSize": 72
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "sum(increase(af_agg_ti_failures{airflow_id=\"$airflow_id\"}[24h]))",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Failed Tasks (24h)",
                "type": "stat"
            },
            {
                "datasource": null,
                "description": "Failed tasks in the last hour",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 1
                                },
                                {
                                    "color": "red",
                                    "value": 5
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 6,
                    "w": 6,
                    "x": 12,
                    "y": 1
                },
                "id": 103,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "text": {
                        "titleSize": 20,
                        "valueSize": 72
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "sum(increase(af_agg_ti_failures{airflow_id=\"$airflow_id\"}[1h]))",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Failed Tasks (1h)",
                "type": "stat"
            },
            {
                "datasource": null,
                "description": "Overall task success rate percentage",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "max": 100,
                        "min": 0,
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "red",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 85
                                },
                                {
                                    "color": "green",
                                    "value": 95
                                }
                            ]
                        },
                        "unit": "percent"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 6,
                    "w": 6,
                    "x": 18,
                    "y": 1
                },
                "id": 104,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "text": {
                        "titleSize": 20,
                        "valueSize": 60
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "(sum(af_agg_ti_successes{airflow_id=\"$airflow_id\"}) / (sum(af_agg_ti_successes{airflow_id=\"$airflow_id\"}) + sum(af_agg_ti_failures{airflow_id=\"$airflow_id\"}))) * 100",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Overall Success Rate",
                "type": "stat"
            },
            {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 7
                },
                "id": 200,
                "panels": [],
                "title": "Top Failed Tasks",
                "type": "row"
            },
            {
                "datasource": null,
                "description": "Most problematic tasks across all DAGs",
                "fieldConfig": {
                    "defaults": {
                        "custom": {
                            "align": null,
                            "displayMode": "auto",
                            "filterable": true
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 1
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Failures"
                            },
                            "properties": [
                                {
                                    "id": "custom.displayMode",
                                    "value": "color-background"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 8,
                    "w": 24,
                    "x": 0,
                    "y": 8
                },
                "id": 301,
                "options": {
                    "showHeader": true,
                    "sortBy": [
                        {
                            "desc": true,
                            "displayName": "Failures"
                        }
                    ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "topk(20, af_agg_ti_finish{state=\"failed\", airflow_id=\"$airflow_id\"})",
                        "format": "table",
                        "instant": true,
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Top 20 Most Failed Tasks",
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {
                                "Time": true,
                                "__name__": true,
                                "airflow_id": true,
                                "instance": true,
                                "job": true,
                                "state": true
                            },
                            "indexByName": {},
                            "renameByName": {
                                "Value": "Failures",
                                "dag_id": "DAG ID",
                                "task_id": "Task ID"
                            }
                        }
                    }
                ],
                "type": "table"
            }
        ],
        "refresh": "5s",
        "schemaVersion": 26,
        "style": "dark",
        "tags": ["airflow", "tasks", "failures"],
        "templating": {
            "list": [
                {
                    "allValue": null,
                    "current": {
                        "selected": false,
                        "text": "airflow",
                        "value": "airflow"
                    },
                    "datasource": "Prometheus",
                    "definition": "label_values(airflow_id)",
                    "error": null,
                    "hide": 0,
                    "includeAll": false,
                    "label": "Airflow Instance Id",
                    "multi": false,
                    "name": "airflow_id",
                    "options": [],
                    "query": "label_values(airflow_id)",
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query",
                    "useTags": false
                }
            ]
        },
        "time": {
            "from": "now-24h",
            "to": "now"
        },
        "timepicker": {
            "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
            ]
        },
        "timezone": "",
        "title": "Airflow Task Failures Overview",
        "uid": "airflow-task-failures",
        "version": 1
    }

  # NOVO Dashboard - DAG Errors por DAG espec√≠fico
  airflow-dag-errors.json: |
    {
        "annotations": {
            "list": []
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "id": 4,
        "links": [],
        "panels": [
            {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 0
                },
                "id": 100,
                "panels": [],
                "title": "DAG Error Overview",
                "type": "row"
            },
            {
                "datasource": null,
                "description": "Total number of failed tasks for this DAG",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 1
                                },
                                {
                                    "color": "red",
                                    "value": 3
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 5,
                    "w": 4,
                    "x": 0,
                    "y": 1
                },
                "id": 101,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "text": {
                        "titleSize": 16,
                        "valueSize": 48
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "sum(af_agg_ti_finish{state=\"failed\", dag_id=\"$dag_id\"})",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Total Failed Tasks",
                "type": "stat"
            },
            {
                "datasource": null,
                "description": "Number of times this DAG failed to complete",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "mappings": [],
                        "noValue": "0",
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 1
                                },
                                {
                                    "color": "red",
                                    "value": 2
                                }
                            ]
                        }
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 5,
                    "w": 4,
                    "x": 4,
                    "y": 1
                },
                "id": 102,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "text": {
                        "titleSize": 16,
                        "valueSize": 48
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "increase(af_agg_dagrun_duration_failed{dag_id=\"$dag_id\"}[24h])",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "DAG Failures (24h)",
                "type": "stat"
            },
            {
                "datasource": null,
                "description": "Failure rate percentage for this DAG",
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "thresholds"
                        },
                        "custom": {},
                        "max": 100,
                        "min": 0,
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "yellow",
                                    "value": 5
                                },
                                {
                                    "color": "red",
                                    "value": 15
                                }
                            ]
                        },
                        "unit": "percent"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 5,
                    "w": 5,
                    "x": 8,
                    "y": 1
                },
                "id": 103,
                "options": {
                    "colorMode": "background",
                    "graphMode": "area",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                        "calcs": [
                            "lastNotNull"
                        ],
                        "fields": "",
                        "values": false
                    },
                    "text": {
                        "titleSize": 16,
                        "valueSize": 36
                    },
                    "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "(sum(af_agg_ti_finish{state=\"failed\", dag_id=\"$dag_id\"}) / (sum(af_agg_ti_finish{state=\"success\", dag_id=\"$dag_id\"}) + sum(af_agg_ti_finish{state=\"failed\", dag_id=\"$dag_id\"}))) * 100",
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Task Failure Rate",
                "type": "stat"
            },
            {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 6
                },
                "id": 200,
                "panels": [],
                "title": "Failed Tasks in DAG",
                "type": "row"
            },
            {
                "datasource": null,
                "description": "List of tasks that failed in this DAG",
                "fieldConfig": {
                    "defaults": {
                        "custom": {
                            "align": null,
                            "displayMode": "auto",
                            "filterable": true
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                },
                                {
                                    "color": "red",
                                    "value": 1
                                }
                            ]
                        }
                    },
                    "overrides": [
                        {
                            "matcher": {
                                "id": "byName",
                                "options": "Failure Count"
                            },
                            "properties": [
                                {
                                    "id": "custom.displayMode",
                                    "value": "color-background"
                                }
                            ]
                        }
                    ]
                },
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 7
                },
                "id": 201,
                "options": {
                    "showHeader": true,
                    "sortBy": [
                        {
                            "desc": true,
                            "displayName": "Failure Count"
                        }
                    ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                    {
                        "expr": "af_agg_ti_finish{state=\"failed\", dag_id=\"$dag_id\"}",
                        "format": "table",
                        "instant": true,
                        "interval": "",
                        "legendFormat": "",
                        "refId": "A"
                    }
                ],
                "title": "Failed Tasks in DAG",
                "transformations": [
                    {
                        "id": "organize",
                        "options": {
                            "excludeByName": {
                                "Time": true,
                                "__name__": true,
                                "airflow_id": true,
                                "instance": true,
                                "job": true,
                                "state": true,
                                "dag_id": true
                            },
                            "indexByName": {},
                            "renameByName": {
                                "Value": "Failure Count",
                                "task_id": "Task ID"
                            }
                        }
                    }
                ],
                "type": "table"
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": null,
                "description": "Timeline showing when tasks failed vs succeeded",
                "fieldConfig": {
                    "defaults": {
                        "custom": {}
                    },
                    "overrides": []
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 7
                },
                "hiddenSeries": false,
                "id": 202,
                "legend": {
                    "avg": false,
                    "current": false,
                    "max": false,
                    "min": false,
                    "show": true,
                    "total": false,
                    "values": false
                },
                "lines": true,
                "linewidth": 2,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.3.5",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "alias": "/.*failed.*/",
                        "color": "red"
                    },
                    {
                        "alias": "/.*success.*/",
                        "color": "green"
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "expr": "rate(af_agg_ti_finish{state=\"failed\", dag_id=\"$dag_id\"}[5m])",
                        "interval": "",
                        "legendFormat": "Failed Tasks Rate",
                        "refId": "A"
                    },
                    {
                        "expr": "rate(af_agg_ti_finish{state=\"success\", dag_id=\"$dag_id\"}[5m])",
                        "interval": "",
                        "legendFormat": "Successful Tasks Rate",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Task Success vs Failure Rate Over Time",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xAxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yAxes": [
                    {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yAxis": {
                    "align": false,
                    "alignLevel": null
                }
            }
        ],
        "refresh": "5s",
        "schemaVersion": 26,
        "style": "dark",
        "tags": ["airflow", "errors", "dag"],
        "templating": {
            "list": [
                {
                    "allValue": null,
                    "current": {
                        "selected": true,
                        "text": "java_dag",
                        "value": "java_dag"
                    },
                    "datasource": "Prometheus",
                    "definition": "label_values(dag_id)",
                    "error": null,
                    "hide": 0,
                    "includeAll": false,
                    "label": "DAG ID",
                    "multi": false,
                    "name": "dag_id",
                    "options": [],
                    "query": "label_values(dag_id)",
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "type": "query",
                    "useTags": false
                }
            ]
        },
        "time": {
            "from": "now-6h",
            "to": "now"
        },
        "timepicker": {
            "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
            ]
        },
        "timezone": "",
        "title": "Airflow DAG Errors Dashboard",
        "uid": "airflow-dag-errors",
        "version": 1
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-system-health-alerts
  namespace: airflow
data:
  system-health-rules.yml: |
    groups:
    - name: airflow.system.health
      rules:
      # Scheduler Heartbeat - Cr√≠tico
      - alert: AirflowSchedulerDown
        expr: increase(af_agg_scheduler_heartbeat[5m]) == 0
        for: 2m
        labels:
          severity: critical
          component: scheduler
          team: data-platform
        annotations:
          summary: "Airflow Scheduler n√£o est√° enviando heartbeat"
          description: "O scheduler do Airflow {{ $labels.airflow_id }} n√£o enviou heartbeat nos √∫ltimos 5 minutos. Sistema pode estar parado."
          runbook_url: "https://wiki.company.com/airflow/runbooks/scheduler-down"
          
      # DAG Import Errors - Cr√≠tico
      - alert: AirflowDAGImportErrors
        expr: af_agg_dag_processing_import_errors > 0
        for: 1m
        labels:
          severity: critical
          component: dag-processor
          team: data-platform
        annotations:
          summary: "Airflow detectou erros ao importar DAGs"
          description: "{{ $value }} erro(s) de importa√ß√£o de DAG detectados no Airflow {{ $labels.airflow_id }}. DAGs podem n√£o estar funcionando."
          runbook_url: "https://wiki.company.com/airflow/runbooks/dag-import-errors"

      # DAG Processing Time - Warning
      - alert: AirflowDAGProcessingTimeSlow
        expr: af_agg_dag_processing_total_parse_time > 300
        for: 5m
        labels:
          severity: warning
          component: dag-processor
          team: data-platform
        annotations:
          summary: "Tempo de processamento de DAGs est√° alto"
          description: "Processamento de DAGs est√° levando {{ $value }}s no Airflow {{ $labels.airflow_id }}. Normal √© < 300s."
          runbook_url: "https://wiki.company.com/airflow/runbooks/slow-dag-processing"

      # DAG Processing Time - Critical
      - alert: AirflowDAGProcessingTimeCritical
        expr: af_agg_dag_processing_total_parse_time > 600
        for: 2m
        labels:
          severity: critical
          component: dag-processor
          team: data-platform
        annotations:
          summary: "Tempo de processamento de DAGs criticamente alto"
          description: "Processamento de DAGs est√° levando {{ $value }}s no Airflow {{ $labels.airflow_id }}. Pode indicar problema grave."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-dag-processing"

      # Executor Slots - No open slots
      - alert: AirflowExecutorNoOpenSlots
        expr: af_agg_executor_open_slots == 0
        for: 5m
        labels:
          severity: warning
          component: executor
          team: data-platform
        annotations:
          summary: "Airflow Executor sem slots dispon√≠veis"
          description: "Executor do Airflow {{ $labels.airflow_id }} est√° sem slots livres. Tasks ficar√£o em fila."
          runbook_url: "https://wiki.company.com/airflow/runbooks/no-executor-slots"

      # Executor Slots - High utilization
      - alert: AirflowExecutorHighUtilization
        expr: (af_agg_executor_running_tasks / (af_agg_executor_open_slots + af_agg_executor_running_tasks)) > 0.85
        for: 10m
        labels:
          severity: warning
          component: executor
          team: data-platform
        annotations:
          summary: "Executor do Airflow com alta utiliza√ß√£o"
          description: "Executor est√° com {{ $value | humanizePercentage }} de utiliza√ß√£o no Airflow {{ $labels.airflow_id }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/high-executor-utilization"

      # DAG Processing Processor Timeouts
      - alert: AirflowDAGProcessorTimeouts
        expr: increase(af_agg_dag_processing_processor_timeouts[30m]) > 0
        for: 1m
        labels:
          severity: warning
          component: dag-processor
          team: data-platform
        annotations:
          summary: "DAG Processor Timeouts detectados"
          description: "{{ $value }} timeout(s) do processador de DAG nos √∫ltimos 30min no Airflow {{ $labels.airflow_id }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/processor-timeouts"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-performance-alerts
  namespace: airflow
data:
  performance-rules.yml: |
    groups:
    - name: airflow.performance
      rules:
      # Task Duration - Slow tasks
      - alert: AirflowSlowTaskDuration
        expr: af_agg_dag_task_duration > 3600000  # 1 hour in milliseconds
        for: 15m
        labels:
          severity: warning
          component: task-performance
          team: data-platform
        annotations:
          summary: "Task com dura√ß√£o alta detectada"
          description: "Task {{ $labels.task_id }} no DAG {{ $labels.dag_id }} est√° levando {{ $value | humanizeDuration }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/slow-tasks"

      # Task Duration - Extremely slow tasks  
      - alert: AirflowExtremelySlowTask
        expr: af_agg_dag_task_duration > 7200000  # 2 hours in milliseconds
        for: 5m
        labels:
          severity: critical
          component: task-performance
          team: data-platform
        annotations:
          summary: "Task extremamente lenta detectada"
          description: "Task {{ $labels.task_id }} no DAG {{ $labels.dag_id }} levando {{ $value | humanizeDuration }}!"
          runbook_url: "https://wiki.company.com/airflow/runbooks/extremely-slow-tasks"

      # DAG Run Duration - Slow DAGs (success)
      - alert: AirflowSlowDAGRun
        expr: af_agg_dagrun_duration_success > 10800000  # 3 hours in milliseconds
        for: 30m
        labels:
          severity: warning
          component: dag-performance
          team: data-platform
        annotations:
          summary: "DAG com dura√ß√£o alta"
          description: "DAG {{ $labels.dag_id }} levou {{ $value | humanizeDuration }} para completar."
          runbook_url: "https://wiki.company.com/airflow/runbooks/slow-dags"

      # Schedule Delay - High scheduling delays
      - alert: AirflowHighScheduleDelay
        expr: af_agg_dagrun_schedule_delay > 900000  # 15 minutes in milliseconds
        for: 20m
        labels:
          severity: warning
          component: scheduling
          team: data-platform
        annotations:
          summary: "Alto atraso de agendamento detectado"
          description: "DAG {{ $labels.dag_id }} com atraso de agendamento: {{ $value | humanizeDuration }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/schedule-delay"

      # Schedule Delay - Critical scheduling delays
      - alert: AirflowCriticalScheduleDelay
        expr: af_agg_dagrun_schedule_delay > 1800000  # 30 minutes in milliseconds
        for: 10m
        labels:
          severity: critical
          component: scheduling
          team: data-platform
        annotations:
          summary: "Atraso cr√≠tico de agendamento!"
          description: "DAG {{ $labels.dag_id }} com atraso CR√çTICO: {{ $value | humanizeDuration }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-schedule-delay"

      # First Task Scheduling Delay
      - alert: AirflowFirstTaskSchedulingDelay
        expr: af_agg_dagrun_first_task_scheduling_delay > 600000  # 10 minutes in milliseconds
        for: 15m
        labels:
          severity: warning
          component: task-scheduling
          team: data-platform
        annotations:
          summary: "Atraso alto para primeira task"
          description: "DAG {{ $labels.dag_id }} com atraso na primeira task: {{ $value | humanizeDuration }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/first-task-delay"

      # Critical Section Duration - Scheduler bottleneck
      - alert: AirflowSchedulerCriticalSectionSlow
        expr: af_agg_scheduler_critical_section_duration > 30000  # 30 seconds
        for: 10m
        labels:
          severity: warning
          component: scheduler-performance
          team: data-platform
        annotations:
          summary: "Se√ß√£o cr√≠tica do scheduler lenta"
          description: "Se√ß√£o cr√≠tica do scheduler levando {{ $value | humanizeDuration }}. Pode indicar gargalo."
          runbook_url: "https://wiki.company.com/airflow/runbooks/scheduler-critical-section"

      # Queue Wait Time - High queue times (usando queued_tasks como proxy)
      - alert: AirflowHighQueueWaitTime
        expr: af_agg_executor_queued_tasks > 10
        for: 15m
        labels:
          severity: warning
          component: queue-performance
          team: data-platform
        annotations:
          summary: "Alto tempo de espera na fila"
          description: "{{ $value }} tasks em fila no executor. Tasks podem estar esperando muito."
          runbook_url: "https://wiki.company.com/airflow/runbooks/high-queue-time"

      # Queue Wait Time - Critical queue buildup
      - alert: AirflowCriticalQueueBuildup
        expr: af_agg_executor_queued_tasks > 50
        for: 5m
        labels:
          severity: critical
          component: queue-performance
          team: data-platform
        annotations:
          summary: "Ac√∫mulo cr√≠tico na fila de execu√ß√£o"
          description: "{{ $value }} tasks em fila! Poss√≠vel gargalo ou problema no executor."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-queue-buildup"

      # DAG Processing Duration - Per file
      - alert: AirflowSlowDAGProcessing
        expr: af_agg_dag_processing_duration > 60000  # 1 minute
        for: 10m
        labels:
          severity: warning
          component: dag-processing
          team: data-platform
        annotations:
          summary: "Processamento lento de arquivo DAG"
          description: "Arquivo {{ $labels.dag_file }} levando {{ $value | humanizeDuration }} para processar."
          runbook_url: "https://wiki.company.com/airflow/runbooks/slow-dag-processing"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-capacity-alerts
  namespace: airflow
data:
  capacity-rules.yml: |
    groups:
    - name: airflow.capacity
      rules:
      # Running Tasks - High utilization
      - alert: AirflowHighRunningTasks
        expr: af_agg_executor_running_tasks > 80
        for: 10m
        labels:
          severity: warning
          component: executor-capacity
          team: data-platform
        annotations:
          summary: "Alto n√∫mero de tasks em execu√ß√£o"
          description: "{{ $value }} tasks executando simultaneamente. Pode indicar necessidade de scaling."
          runbook_url: "https://wiki.company.com/airflow/runbooks/high-running-tasks"

      # Running Tasks - Critical utilization
      - alert: AirflowCriticalRunningTasks
        expr: af_agg_executor_running_tasks > 150
        for: 5m
        labels:
          severity: critical
          component: executor-capacity
          team: data-platform
        annotations:
          summary: "N√∫mero cr√≠tico de tasks em execu√ß√£o"
          description: "{{ $value }} tasks executando! Sistema pode estar sobrecarregado."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-running-tasks"

      # Queued Tasks - Backlog building up
      - alert: AirflowQueuedTasksBacklog
        expr: af_agg_executor_queued_tasks > 20
        for: 15m
        labels:
          severity: warning
          component: executor-capacity
          team: data-platform
        annotations:
          summary: "Backlog de tasks em fila"
          description: "{{ $value }} tasks em fila. Capacidade pode estar insuficiente."
          runbook_url: "https://wiki.company.com/airflow/runbooks/queued-tasks-backlog"

      # Queued Tasks - Critical backlog
      - alert: AirflowQueuedTasksCritical
        expr: af_agg_executor_queued_tasks > 100
        for: 5m
        labels:
          severity: critical
          component: executor-capacity
          team: data-platform
        annotations:
          summary: "Backlog cr√≠tico de tasks em fila"
          description: "{{ $value }} tasks em fila! Necess√°rio scaling urgente."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-queued-tasks"

      # Pool Utilization - High pool usage
      - alert: AirflowPoolHighUtilization
        expr: |
          (af_agg_pool_running_slots / (af_agg_pool_open_slots + af_agg_pool_running_slots)) > 0.90
        for: 15m
        labels:
          severity: warning
          component: pool-capacity
          team: data-platform
        annotations:
          summary: "Pool {{ $labels.pool_name }} com alta utiliza√ß√£o"
          description: "Pool {{ $labels.pool_name }} est√° com {{ $value | humanizePercentage }} de utiliza√ß√£o."
          runbook_url: "https://wiki.company.com/airflow/runbooks/pool-high-utilization"

      # Pool Utilization - No available slots
      - alert: AirflowPoolNoAvailableSlots
        expr: af_agg_pool_open_slots == 0
        for: 10m
        labels:
          severity: critical
          component: pool-capacity
          team: data-platform
        annotations:
          summary: "Pool {{ $labels.pool_name }} sem slots dispon√≠veis"
          description: "Pool {{ $labels.pool_name }} est√° completamente ocupado. Tasks ficar√£o esperando."
          runbook_url: "https://wiki.company.com/airflow/runbooks/pool-no-slots"

      # Pool Starving Tasks - Tasks waiting for pool slots
      - alert: AirflowPoolStarvingTasks
        expr: af_agg_pool_starving_tasks > 5
        for: 10m
        labels:
          severity: warning
          component: pool-capacity
          team: data-platform
        annotations:
          summary: "Tasks aguardando slots no pool {{ $labels.pool_name }}"
          description: "{{ $value }} tasks aguardando slots no pool {{ $labels.pool_name }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/pool-starving-tasks"

      # Scheduler Tasks Starving - General scheduler capacity
      - alert: AirflowSchedulerTasksStarving
        expr: af_agg_scheduler_tasks_starving > 10
        for: 10m
        labels:
          severity: warning
          component: scheduler-capacity
          team: data-platform
        annotations:
          summary: "Tasks 'starving' no scheduler"
          description: "{{ $value }} tasks 'starving' no scheduler. Pode indicar problema de capacidade."
          runbook_url: "https://wiki.company.com/airflow/runbooks/scheduler-starving-tasks"

      # Orphaned Tasks - Tasks without proper cleanup
      - alert: AirflowOrphanedTasksDetected
        expr: increase(af_agg_scheduler_orphaned_tasks_cleared[1h]) > 5
        for: 5m
        labels:
          severity: warning
          component: task-lifecycle
          team: data-platform
        annotations:
          summary: "Tasks √≥rf√£s detectadas e limpas"
          description: "{{ $value }} tasks √≥rf√£s foram limpas na √∫ltima hora. Pode indicar problema no ciclo de vida."
          runbook_url: "https://wiki.company.com/airflow/runbooks/orphaned-tasks"

      # Critical Section Busy - Scheduler contention
      - alert: AirflowCriticalSectionBusy
        expr: increase(af_agg_scheduler_critical_section_busy[10m]) > 5
        for: 5m
        labels:
          severity: warning
          component: scheduler-capacity
          team: data-platform
        annotations:
          summary: "Se√ß√£o cr√≠tica do scheduler ocupada frequentemente"
          description: "{{ $value }} tentativas de acesso √† se√ß√£o cr√≠tica bloqueadas nos √∫ltimos 10min."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-section-busy"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-business-impact-alerts
  namespace: airflow
data:
  business-impact-rules.yml: |
    groups:
    - name: airflow.business.impact
      rules:
      # Daily Task Volume - Low processing volume
      - alert: AirflowLowDailyTaskVolume
        expr: |
          sum(increase(af_agg_ti_start[24h])) < 100
        for: 2h
        labels:
          severity: warning
          component: business-metrics
          team: data-platform
          business_impact: medium
        annotations:
          summary: "Volume di√°rio de tasks abaixo do esperado"
          description: "Apenas {{ $value }} tasks foram iniciadas nas √∫ltimas 24h. Volume esperado > 100."
          runbook_url: "https://wiki.company.com/airflow/runbooks/low-task-volume"

      # Weekly Task Volume - Significant drop
      - alert: AirflowWeeklyTaskVolumeDrop
        expr: |
          (
            sum(increase(af_agg_ti_start[24h])) / 
            sum(increase(af_agg_ti_start[24h] offset 7d))
          ) < 0.7
        for: 4h
        labels:
          severity: warning
          component: business-metrics
          team: data-platform
          business_impact: high
        annotations:
          summary: "Queda significativa no volume semanal de tasks"
          description: "Volume de tasks caiu {{ $value | humanizePercentage }} comparado √† semana passada."
          runbook_url: "https://wiki.company.com/airflow/runbooks/weekly-volume-drop"

      # Critical DAG Health - Revenue impacting DAGs
      - alert: AirflowCriticalDAGDown
        expr: |
          time() - max by (dag_id) (af_agg_ti_start{dag_id=~"revenue_.*|billing_.*|critical_.*"}) > 86400
        for: 30m
        labels:
          severity: critical
          component: critical-dags
          team: data-platform
          business_impact: critical
        annotations:
          summary: "DAG cr√≠tica {{ $labels.dag_id }} n√£o executou em 24h"
          description: "DAG cr√≠tica {{ $labels.dag_id }} n√£o teve tasks iniciadas nas √∫ltimas 24h. IMPACTO NO NEG√ìCIO!"
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-dag-down"

      # Critical DAG Health - Data pipeline failures
      - alert: AirflowDataPipelineFailure
        expr: |
          increase(af_agg_ti_finish{state="failed", dag_id=~"data_.*|etl_.*|pipeline_.*"}[1h]) > 0
        for: 15m
        labels:
          severity: critical
          component: data-pipelines
          team: data-platform
          business_impact: high
        annotations:
          summary: "Falha em pipeline de dados cr√≠tico"
          description: "Pipeline {{ $labels.dag_id }} teve falhas na √∫ltima hora. Dados podem estar desatualizados."
          runbook_url: "https://wiki.company.com/airflow/runbooks/data-pipeline-failure"

      # Data Freshness - Tasks not running in expected window
      - alert: AirflowDataFreshnessIssue
        expr: |
          time() - max by (dag_id) (af_agg_ti_finish{dag_id=~"daily_.*", state="success"}) > 129600  # 36 hours
        for: 2h
        labels:
          severity: warning
          component: data-freshness
          team: data-platform
          business_impact: medium
        annotations:
          summary: "Dados podem estar desatualizados para {{ $labels.dag_id }}"
          description: "DAG {{ $labels.dag_id }} n√£o teve sucesso h√° mais de 36h. Dados podem estar stale."
          runbook_url: "https://wiki.company.com/airflow/runbooks/data-freshness"

      # Critical Data Freshness - Business critical data
      - alert: AirflowCriticalDataStale
        expr: |
          time() - max by (dag_id) (af_agg_ti_finish{dag_id=~"reporting_.*|dashboard_.*|metrics_.*", state="success"}) > 172800  # 48 hours
        for: 1h
        labels:
          severity: critical
          component: data-freshness
          team: data-platform
          business_impact: critical
        annotations:
          summary: "Dados cr√≠ticos para neg√≥cio desatualizados"
          description: "DAG {{ $labels.dag_id }} n√£o teve sucesso h√° mais de 48h. IMPACTO EM REPORTS/DASHBOARDS!"
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-data-stale"

      # Cost Efficiency - High failure rate (wasted resources)
      - alert: AirflowHighResourceWaste
        expr: |
          (
            sum by (dag_id) (rate(af_agg_ti_failures[24h])) /
            (sum by (dag_id) (rate(af_agg_ti_failures[24h])) + sum by (dag_id) (rate(af_agg_ti_successes[24h])))
          ) > 0.20
        for: 6h
        labels:
          severity: warning
          component: cost-efficiency
          team: data-platform
          business_impact: medium
        annotations:
          summary: "Alto desperd√≠cio de recursos no DAG {{ $labels.dag_id }}"
          description: "DAG {{ $labels.dag_id }} com {{ $value | humanizePercentage }} de falhas. Alto custo por desperd√≠cio."
          runbook_url: "https://wiki.company.com/airflow/runbooks/resource-waste"

      # Business Hours Performance - SLA during business hours
      - alert: AirflowBusinessHoursSLA
        expr: |
          increase(af_agg_sla_miss{dag_id=~"business_.*|report_.*"}[1h]) > 0 and hour() >= 8 and hour() <= 18
        for: 10m
        labels:
          severity: critical
          component: business-sla
          team: data-platform
          business_impact: critical
        annotations:
          summary: "SLA miss durante hor√°rio comercial!"
          description: "SLA miss no DAG {{ $labels.dag_id }} durante hor√°rio comercial. Impacto em usu√°rios!"
          runbook_url: "https://wiki.company.com/airflow/runbooks/business-hours-sla"

      # End-of-Day Processing - Critical for daily reports
      - alert: AirflowEndOfDayProcessingDelay
        expr: |
          hour() > 22 and 
          time() - max by (dag_id) (af_agg_ti_start{dag_id=~"eod_.*|daily_report_.*"}) > 7200  # 2 hours
        for: 30m
        labels:
          severity: critical
          component: eod-processing
          team: data-platform
          business_impact: critical
        annotations:
          summary: "Processamento end-of-day atrasado"
          description: "DAG {{ $labels.dag_id }} n√£o iniciou processamento noturno. Reports matinais podem atrasar!"
          runbook_url: "https://wiki.company.com/airflow/runbooks/eod-processing-delay"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-common-market-alerts
  namespace: airflow
data:
  common-market-rules.yml: |
    groups:
    - name: airflow.common.market.alerts
      rules:
      # Task failure rate > 5% em janela de tempo
      - alert: AirflowTaskFailureRateHigh
        expr: |
          (
            sum(rate(af_agg_ti_failures[1h])) /
            (sum(rate(af_agg_ti_failures[1h])) + sum(rate(af_agg_ti_successes[1h])))
          ) > 0.05
        for: 30m
        labels:
          severity: warning
          component: task-reliability
          team: data-platform
          market_standard: failure-rate-slo
        annotations:
          summary: "Taxa de falha de tasks acima de 5%"
          description: "Taxa de falha est√° em {{ $value | humanizePercentage }} na √∫ltima hora. Padr√£o de mercado √© < 5%."
          runbook_url: "https://wiki.company.com/airflow/slo/task-failure-rate"

      # Scheduler n√£o enviou heartbeat em X minutos
      - alert: AirflowSchedulerHeartbeatMissing
        expr: increase(af_agg_scheduler_heartbeat[3m]) == 0
        for: 3m
        labels:
          severity: critical
          component: scheduler-health
          team: data-platform
          market_standard: scheduler-availability
        annotations:
          summary: "Scheduler parou de enviar heartbeat"
          description: "Scheduler do Airflow {{ $labels.airflow_id }} n√£o enviou heartbeat nos √∫ltimos 3 minutos."
          runbook_url: "https://wiki.company.com/airflow/runbooks/scheduler-heartbeat-missing"

      # SLA miss em DAGs cr√≠ticas
      - alert: AirflowCriticalDAGSLAViolation
        expr: |
          increase(af_agg_sla_miss{dag_id=~".*critical.*|.*prod.*|.*revenue.*|.*important.*"}[5m]) > 0
        for: 0m
        labels:
          severity: critical
          component: critical-sla
          team: data-platform
          market_standard: critical-dag-sla
          business_impact: high
        annotations:
          summary: "Viola√ß√£o de SLA em DAG cr√≠tica"
          description: "SLA violado na DAG cr√≠tica {{ $labels.dag_id }}, task {{ $labels.task_id }}."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-dag-sla"

      # Queue buildup > threshold
      - alert: AirflowQueueBuildupThreshold
        expr: af_agg_executor_queued_tasks > 25
        for: 10m
        labels:
          severity: warning
          component: queue-management
          team: data-platform
          market_standard: queue-threshold
        annotations:
          summary: "Fila de tasks acima do threshold"
          description: "{{ $value }} tasks em fila no executor. Threshold padr√£o √© 25 tasks."
          runbook_url: "https://wiki.company.com/airflow/runbooks/queue-buildup"

      # DAG import errors > 0
      - alert: AirflowDAGImportErrorsDetected
        expr: af_agg_dag_processing_import_errors > 0
        for: 2m
        labels:
          severity: critical
          component: dag-integrity
          team: data-platform
          market_standard: zero-import-errors
        annotations:
          summary: "Erros de importa√ß√£o de DAG detectados"
          description: "{{ $value }} erro(s) de importa√ß√£o de DAG. Padr√£o √© zero erros."
          runbook_url: "https://wiki.company.com/airflow/runbooks/dag-import-errors"

      # Critical DAG n√£o executou no prazo esperado
      - alert: AirflowCriticalDAGNotExecuted
        expr: |
          (time() - max by (dag_id) (af_agg_ti_start{dag_id=~".*critical.*|.*daily.*|.*hourly.*"})) > 7200
        for: 15m
        labels:
          severity: critical
          component: critical-dag-execution
          team: data-platform
          market_standard: dag-execution-timeliness
          business_impact: high
        annotations:
          summary: "DAG cr√≠tica n√£o executou no prazo"
          description: "DAG cr√≠tica {{ $labels.dag_id }} n√£o iniciou execu√ß√£o h√° mais de 2 horas."
          runbook_url: "https://wiki.company.com/airflow/runbooks/critical-dag-not-executed"

      # High task retry rate (market standard)
      - alert: AirflowHighTaskRetryRateMarket
        expr: |
          (
            sum by (dag_id) (rate(af_agg_ti_finish{state="up_for_retry"}[2h])) /
            sum by (dag_id) (rate(af_agg_ti_finish[2h]))
          ) > 0.10
        for: 1h
        labels:
          severity: warning
          component: task-stability
          team: data-platform
          market_standard: retry-rate-threshold
        annotations:
          summary: "Alta taxa de retry no DAG {{ $labels.dag_id }}"
          description: "DAG {{ $labels.dag_id }} com {{ $value | humanizePercentage }} de retry rate. Padr√£o de mercado √© < 10%."
          runbook_url: "https://wiki.company.com/airflow/runbooks/high-retry-rate"

      # Executor utilization > 90% (capacity planning)
      - alert: AirflowExecutorUtilizationHigh
        expr: |
          (af_agg_executor_running_tasks / (af_agg_executor_running_tasks + af_agg_executor_open_slots)) > 0.90
        for: 20m
        labels:
          severity: warning
          component: capacity-planning
          team: data-platform
          market_standard: executor-utilization
        annotations:
          summary: "Utiliza√ß√£o do executor acima de 90%"
          description: "Executor com {{ $value | humanizePercentage }} de utiliza√ß√£o. Considerar scaling."
          runbook_url: "https://wiki.company.com/airflow/runbooks/executor-high-utilization"

      # Long running DAG (> 4 hours)
      - alert: AirflowLongRunningDAG
        expr: af_agg_dagrun_duration_success > 14400000  # 4 hours in milliseconds
        for: 30m
        labels:
          severity: warning
          component: dag-performance
          team: data-platform
          market_standard: dag-duration-limit
        annotations:
          summary: "DAG com execu√ß√£o muito longa"
          description: "DAG {{ $labels.dag_id }} levou {{ $value | humanizeDuration }} para completar. Considerar otimiza√ß√£o."
          runbook_url: "https://wiki.company.com/airflow/runbooks/long-running-dag"

      # Database connection issues (proxy via task failures)
      - alert: AirflowDatabaseConnectionIssues
        expr: |
          increase(af_agg_ti_failures[15m]) > 10 and 
          increase(af_agg_scheduler_heartbeat[15m]) == 0
        for: 5m
        labels:
          severity: critical
          component: database-connectivity
          team: data-platform
          market_standard: database-reliability
        annotations:
          summary: "Poss√≠vel problema de conectividade com banco de dados"
          description: "Alto n√∫mero de falhas ({{ $value }}) e scheduler sem heartbeat. Pode ser problema de BD."
          runbook_url: "https://wiki.company.com/airflow/runbooks/database-connection"

      # Worker health (for environments with workers)
      - alert: AirflowWorkerHealthIssue
        expr: |
          af_agg_executor_running_tasks == 0 and 
          af_agg_executor_queued_tasks > 5
        for: 10m
        labels:
          severity: critical
          component: worker-health
          team: data-platform
          market_standard: worker-availability
        annotations:
          summary: "Workers podem estar indispon√≠veis"
          description: "{{ $value }} tasks em fila mas nenhuma executando. Workers podem estar down."
          runbook_url: "https://wiki.company.com/airflow/runbooks/worker-health"

      # Memory/Resource pressure indicator
      - alert: AirflowResourcePressure
        expr: |
          af_agg_scheduler_critical_section_duration > 60000 and  # 1 minute
          af_agg_executor_queued_tasks > 20
        for: 15m
        labels:
          severity: warning
          component: resource-pressure
          team: data-platform
          market_standard: resource-efficiency
        annotations:
          summary: "Indicadores de press√£o de recursos"
          description: "Se√ß√£o cr√≠tica lenta ({{ $value }}ms) e fila alta. Poss√≠vel press√£o de recursos."
          runbook_url: "https://wiki.company.com/airflow/runbooks/resource-pressure"
---
# Grafana PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: airflow
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 5Gi
---

# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: airflow
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:8.2.4
          ports:
            - containerPort: 3000
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_NAME
              value: "Main Org."
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Admin"
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m"
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: airflow
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  type: LoadBalancer
  ports:
    - name: http
      port: 3000
      targetPort: 3000
