executor: KubernetesExecutor
airflowVersion: "2.10.5"

images:
  airflow:
    repository: apache/airflow
    tag: "2.10.5"
    pullPolicy: IfNotPresent

config:
  core:
    executor: KubernetesExecutor
    fernet_key: "UldaM1dEZGlZVzVuZERCeVlrUjBSR2xHTTNsR1prdGtjWE5EYUhONWNYaz0="
    dags_are_paused_at_creation: true
    load_examples: false
  api:
    auth_backends: "airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session"
  scheduler:
    enable_health_check: true
  metrics:
    statsd_on: true
    statsd_host: airflow-statsd
    statsd_port: 9125
    statsd_prefix: airflow
    metrics_use_pattern_match: false
    otel_on: false
  kubernetes:
    # Kubernetes executor configuration
    namespace: airflow
    worker_container_repository: apache/airflow
    worker_container_tag: "2.10.5"
    worker_pods_creation_batch_size: 1
    worker_service_account_name: airflow-worker
    delete_worker_pods: true
    delete_worker_pods_on_success: false
    delete_worker_pods_on_failure: false

webserverSecretKey: "UldaM1dEZGlZVzVuZERCeVlrUjBSR2xHTTNsR1prdGtjWE5EYUhONWNYaz0="

dags:
  persistence:
    enabled: false
  gitSync:
    enabled: true
    repo: https://github.com/samuel-aka-viana/airflow-prometheus.git
    branch: main
    subPath: dags

logs:
  persistence:
    enabled: false

postgresql:
  enabled: true
  auth:
    postgresPassword: airflow
    username: airflow
    password: airflow
    database: airflow
  primary:
    persistence:
      enabled: true
      size: 8Gi

# Redis is not needed with KubernetesExecutor
redis:
  enabled: false

# Workers are not needed with KubernetesExecutor - pods are created on demand
#workers:
#  enabled: false

scheduler:
  replicas: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

webserver:
  replicas: 1
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  service:
    type: ClusterIP
    ports:
      - name: airflow-ui
        port: 8080
  defaultUser:
    enabled: true
    role: Admin
    username: admin
    password: admin
    email: admin@example.com
  startupProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 60
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 2
    failureThreshold: 6
  readinessProbe:
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 12

triggerer:
  enabled: true
  replicas: 1

statsd:
  enabled: true

migrateDatabaseJob:
  enabled: true

cleanup:
  enabled: true

# ServiceAccount and RBAC for KubernetesExecutor worker pods
serviceAccount:
  create: true
  name: ""
  annotations: {}

rbac:
  create: true
  rules:
    - apiGroups:
        - ""
      resources:
        - "pods"
        - "pods/log"
      verbs:
        - "create"
        - "get"
        - "delete"
        - "list"
        - "watch"

# Pod template for worker pods (optional customization)
#workers:
#  podTemplate: |
#    apiVersion: v1
#    kind: Pod
#    metadata:
#      name: placeholder-name
#      labels:
#        tier: airflow
#        component: worker
#        release: airflow
#    spec:
#      restartPolicy: Never
#      serviceAccountName: airflow-worker
#      containers:
#        - name: base
#          image: apache/airflow:2.10.5
#          imagePullPolicy: IfNotPresent
#          args: []
#          ports:
#            - name: worker-logs
#              containerPort: 8793
#          resources:
#            limits:
#              cpu: 1000m
#              memory: 2Gi
#            requests:
#              cpu: 500m
#              memory: 1Gi
#          volumeMounts:
#            - name: config
#              mountPath: /opt/airflow/airflow.cfg
#              subPath: airflow.cfg
#              readOnly: true
#            - name: config
#              mountPath: /opt/airflow/config/airflow_local_settings.py
#              subPath: airflow_local_settings.py
#              readOnly: true
#      volumes:
#        - name: config
#          configMap:
#            name: airflow-config