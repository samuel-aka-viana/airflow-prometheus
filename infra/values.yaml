executor: KubernetesExecutor
airflowVersion: "2.10.5"

images:
  airflow:
    repository: apache/airflow
    tag: "2.10.5"
    pullPolicy: IfNotPresent

config:
  core:
    parallelism: 64
    executor: KubernetesExecutor
    fernet_key: "UldaM1dEZGlZVzVuZERCeVlrUjBSR2xHTTNsR1prdGtjWE5EYUhONWNYaz0="
    dags_are_paused_at_creation: true
    load_examples: false
    sql_alchemy_conn: "postgresql+psycopg2://airflow:airflow@airflow-postgresql:5432/airflow"
  database:
    sql_alchemy_conn: "postgresql+psycopg2://airflow:airflow@airflow-postgresql:5432/airflow"
  api:
    auth_backends: "airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session"
  scheduler:
    enable_health_check: true
  metrics:
    statsd_on: true
    statsd_host: airflow-statsd.airflow.svc.cluster.local
    statsd_port: 9125
    statsd_prefix: airflow
    metrics_use_pattern_match: false
    otel_on: false
    statsd_allow_list: 'scheduler,executor,dagrun,pool,triggerer,ti,operator,dag,celery,task,sla'
  kubernetes:
    # Kubernetes executor configuration
    namespace: airflow
    worker_container_repository: apache/airflow
    worker_container_tag: "2.10.5"
    worker_pods_creation_batch_size: 1
    worker_service_account_name: airflow-worker
    delete_worker_pods: true
    delete_worker_pods_on_success: false
    delete_worker_pods_on_failure: false

kubernetesPodTemplate: |
  apiVersion: v1
  kind: Pod
  spec:
    restartPolicy: Never
    containers:
      - name: base
        image: apache/airflow:2.10.5
        resources:
          requests:
            cpu: "1"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "3Gi"


webserverSecretKey: "UldaM1dEZGlZVzVuZERCeVlrUjBSR2xHTTNsR1prdGtjWE5EYUhONWNYaz0="

# Override the data connection for all components
data:
  metadataConnection:
    user: airflow
    pass: airflow
    protocol: postgresql
    host: airflow-postgresql
    port: 5432
    db: airflow

dags:
  persistence:
    enabled: false
  gitSync:
    enabled: true
    repo: https://github.com/samuel-aka-viana/airflow-prometheus.git
    branch: main
    subPath: dags

logs:
  persistence:
    enabled: false

postgresql:
  enabled: true
  auth:
    postgresPassword: airflow
    username: airflow
    password: airflow
    database: airflow
  primary:
    persistence:
      enabled: true
      size: 8Gi

# Redis is not needed with KubernetesExecutor
redis:
  enabled: false

scheduler:
  replicas: 1
  resources:
    requests:
      cpu: "2"
      memory: "4Gi"
    limits:
      cpu: "4"
      memory: "8Gi"

webserver:
  replicas: 1
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
    limits:
      cpu: "2"
      memory: "4Gi"
  service:
    type: ClusterIP
    ports:
      - name: airflow-ui
        port: 8080
  defaultUser:
    enabled: true
    role: Admin
    username: admin
    password: admin
    email: admin@example.com
  startupProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 60
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 2
    failureThreshold: 6
  readinessProbe:
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 12

triggerer:
  enabled: true
  replicas: 1

statsd:
  enabled: false

migrateDatabaseJob:
  enabled: true

cleanup:
  enabled: true

# ServiceAccount and RBAC for KubernetesExecutor worker pods
serviceAccount:
  create: true
  name: ""
  annotations: {}

rbac:
  create: true
  rules:
    - apiGroups:
        - ""
      resources:
        - "pods"
        - "pods/log"
      verbs:
        - "create"
        - "get"
        - "delete"
        - "list"
        - "watch"